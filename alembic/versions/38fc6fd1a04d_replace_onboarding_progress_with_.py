"""replace onboarding_progress with onboarding_answers table

Revision ID: 38fc6fd1a04d
Revises: e95569ac6b84
Create Date: 2025-06-22 17:45:51.849071

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '38fc6fd1a04d'
down_revision = 'e95569ac6b84'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('onboarding_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('habit_name', sa.String(), nullable=False),
    sa.Column('habit_description', sa.String(), nullable=True),
    sa.Column('frequency', sa.String(), nullable=False),
    sa.Column('validation_time', sa.String(), nullable=False),
    sa.Column('difficulty', sa.String(), nullable=False),
    sa.Column('proof_style', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_onboarding_answers_id'), 'onboarding_answers', ['id'], unique=False)
    conn = op.get_bind()
    result = conn.execute(
        sa.text("SELECT to_regclass('public.ix_onboarding_progress_id')")
    ).scalar()
    if result:
        op.drop_index(op.f('ix_onboarding_progress_id'), table_name='onboarding_progress')
    op.drop_table('onboarding_progress')
    op.drop_index(op.f('ix_users_clerk_id'), table_name='users')
    op.create_index(op.f('ix_users_clerk_id'), 'users', ['clerk_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_clerk_id'), table_name='users')
    op.create_index(op.f('ix_users_clerk_id'), 'users', ['clerk_id'], unique=False)
    op.create_table('onboarding_progress',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('current_step', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('data', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('onboarding_progress_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('onboarding_progress_pkey')),
    sa.UniqueConstraint('user_id', name=op.f('onboarding_progress_user_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_onboarding_progress_id'), 'onboarding_progress', ['id'], unique=False)
    op.drop_index(op.f('ix_onboarding_answers_id'), table_name='onboarding_answers')
    op.drop_table('onboarding_answers')
    # ### end Alembic commands ###