"""add_close_friends_table

Revision ID: 6d52704a9b2f
Revises: add_reply_support
Create Date: 2025-07-01 02:42:17.928622

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6d52704a9b2f'
down_revision = 'add_reply_support'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_participant_conversation_user', table_name='conversation_participants')
    op.drop_index('idx_participant_online', table_name='conversation_participants')
    op.drop_index('idx_participant_unread', table_name='conversation_participants')
    op.drop_index('ix_conversation_participants_id', table_name='conversation_participants')
    op.drop_table('conversation_participants')
    op.drop_index('idx_friendship_friend_id', table_name='friendships')
    op.drop_index('idx_friendship_status', table_name='friendships')
    op.drop_index('idx_friendship_user_id', table_name='friendships')
    op.drop_index('ix_friendships_id', table_name='friendships')
    op.drop_table('friendships')
    op.drop_index('idx_friend_request_created_at', table_name='friend_requests')
    op.drop_index('idx_friend_request_receiver_id', table_name='friend_requests')
    op.drop_index('idx_friend_request_sender_id', table_name='friend_requests')
    op.drop_index('idx_friend_request_status', table_name='friend_requests')
    op.drop_index('ix_friend_requests_id', table_name='friend_requests')
    op.drop_table('friend_requests')
    op.drop_index('idx_message_conversation_created', table_name='messages')
    op.drop_index('idx_message_replied_to', table_name='messages')
    op.drop_index('idx_message_sender', table_name='messages')
    op.drop_index('idx_message_status', table_name='messages')
    op.drop_index('ix_messages_id', table_name='messages')
    op.drop_table('messages')
    op.drop_index('idx_conversation_last_message', table_name='conversations')
    op.drop_index('idx_conversation_participants', table_name='conversations')
    op.drop_index('ix_conversations_id', table_name='conversations')
    op.drop_table('conversations')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversations',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('conversations_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('participant_1_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('participant_2_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_message_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['participant_1_id'], ['users.id'], name='conversations_participant_1_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['participant_2_id'], ['users.id'], name='conversations_participant_2_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='conversations_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_conversations_id', 'conversations', ['id'], unique=False)
    op.create_index('idx_conversation_participants', 'conversations', ['participant_1_id', 'participant_2_id'], unique=False)
    op.create_index('idx_conversation_last_message', 'conversations', ['last_message_at'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('messages_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('conversation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sender_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('message_type', sa.VARCHAR(), server_default=sa.text("'text'::character varying"), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default=sa.text("'sent'::character varying"), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('delivered_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('read_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('replied_to_message_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], name='messages_conversation_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['replied_to_message_id'], ['messages.id'], name='fk_messages_replied_to_message_id', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name='messages_sender_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='messages_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_messages_id', 'messages', ['id'], unique=False)
    op.create_index('idx_message_status', 'messages', ['status'], unique=False)
    op.create_index('idx_message_sender', 'messages', ['sender_id'], unique=False)
    op.create_index('idx_message_replied_to', 'messages', ['replied_to_message_id'], unique=False)
    op.create_index('idx_message_conversation_created', 'messages', ['conversation_id', 'created_at'], unique=False)
    op.create_table('friend_requests',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('sender_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('receiver_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=False),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], name='friend_requests_receiver_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name='friend_requests_sender_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='friend_requests_pkey'),
    sa.UniqueConstraint('sender_id', 'receiver_id', name='unique_friend_request')
    )
    op.create_index('ix_friend_requests_id', 'friend_requests', ['id'], unique=False)
    op.create_index('idx_friend_request_status', 'friend_requests', ['status'], unique=False)
    op.create_index('idx_friend_request_sender_id', 'friend_requests', ['sender_id'], unique=False)
    op.create_index('idx_friend_request_receiver_id', 'friend_requests', ['receiver_id'], unique=False)
    op.create_index('idx_friend_request_created_at', 'friend_requests', ['created_at'], unique=False)
    op.create_table('friendships',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('friend_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default=sa.text("'active'::character varying"), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], name='friendships_friend_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='friendships_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='friendships_pkey'),
    sa.UniqueConstraint('user_id', 'friend_id', name='unique_friendship')
    )
    op.create_index('ix_friendships_id', 'friendships', ['id'], unique=False)
    op.create_index('idx_friendship_user_id', 'friendships', ['user_id'], unique=False)
    op.create_index('idx_friendship_status', 'friendships', ['status'], unique=False)
    op.create_index('idx_friendship_friend_id', 'friendships', ['friend_id'], unique=False)
    op.create_table('conversation_participants',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('conversation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_online', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('last_seen_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_read_message_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('unread_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('joined_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], name='conversation_participants_conversation_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['last_read_message_id'], ['messages.id'], name='conversation_participants_last_read_message_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='conversation_participants_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='conversation_participants_pkey')
    )
    op.create_index('ix_conversation_participants_id', 'conversation_participants', ['id'], unique=False)
    op.create_index('idx_participant_unread', 'conversation_participants', ['unread_count'], unique=False)
    op.create_index('idx_participant_online', 'conversation_participants', ['is_online'], unique=False)
    op.create_index('idx_participant_conversation_user', 'conversation_participants', ['conversation_id', 'user_id'], unique=False)
    # ### end Alembic commands ###