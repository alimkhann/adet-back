"""Replace email with clerk_id in user model

Revision ID: 9843013f2d88
Revises: 0ae3e7829605
Create Date: 2025-06-21 15:00:34.210474

"""
from sqlalchemy import text
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9843013f2d88'
down_revision = '0ae3e7829605'
branch_labels = None
depends_on = None


def upgrade() -> None:
    conn = op.get_bind()
    result = conn.execute(
        text("SELECT to_regclass('public.ix_users_email')")
    ).scalar()
    if result:
        op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_index(op.f('ix_users_clerk_id'), 'users', ['clerk_id'], unique=True)
    # Conditionally drop columns if they exist
    for col in ['hashed_password', 'email']:
        col_exists = conn.execute(
            text(f"SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='{col}'")
        ).scalar()
        if col_exists:
            op.drop_column('users', col)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_clerk_id'), table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # op.drop_column('users', 'clerk_id')  # Don't drop, as it was not added here
    # ### end Alembic commands ###